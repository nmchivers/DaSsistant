@use '../../variables' as *;

:root {
    --compSpec-textInput-label-color-text: var(--mn-color-neutral-0900);
    --compSpec-textInput-label-color-text-error: var(--mn-color-red-0600);
    --compSpec-textInput-label-optional-color-text: var(--mn-color-neutral-0700);
    --compSpec-textInput-description-color-text: var(--mn-color-neutral-0700);
    --compSpec-textInput-label-container-spacing-gap-vertical: var(--mn-baseSize-0050);
    --compSpec-textInput-label-container-spacing-margin-vertical-bottom: var(--mn-baseSize-0100);
    --compSpec-textInput-labelOptional-spacing-gap-horizontal: var(--mn-baseSize-0100);
    --compSpec-textInput-errorMessage-color-text: var(--mn-color-red-0600);
    --compSpec-textInput-errorMessage-spacing-margin-vertical-top: var(--mn-baseSize-0100);
    --compSpec-textInput-input-color-bg-resting: var(--mn-color-neutral-0050);
    --compSpec-textInput-input-color-bg-hover: var(--mn-color-primary-0100);
    --compSpec-textInput-input-color-bg-focus: var(--mn-color-neutral-0050);
    --compSpec-textInput-input-color-bg-active: var(--mn-color-neutral-0050);
    --compSpec-textInput-input-color-bg-filled: var(--mn-color-neutral-0050);
    --compSpec-textInput-input-color-bg-disabled: var(--mn-color-neutral-0200);
    --compSpec-textInput-input-color-bg-resting-error: var(--mn-color-neutral-0050);
    --compSpec-textInput-input-color-bg-hover-error: var(--mn-color-red-0100);
    --compSpec-textInput-input-color-bg-focus-error: var(--mn-color-neutral-0050);
    --compSpec-textInput-input-color-bg-active-error: var(--mn-color-neutral-0050);
    --compSpec-textInput-input-color-bg-filled-error: var(--mn-color-neutral-0050);
    --compSpec-textInput-input-color-text-placeholder: var(--mn-color-neutral-0700);
    --compSpec-textInput-input-color-text-placeholder-disabled: var(--mn-color-neutral-0500);
    --compSpec-textInput-input-color-text: var(--mn-color-neutral-0900);
    --compSpec-textInput-input-color-text-disabled: var(--mn-color-neutral-0500);
    --compSpec-textInput-input-color-border-resting: var(--mn-color-neutral-0600);
    --compSpec-textInput-input-color-border-hover: var(--mn-color-primary-0800);
    --compSpec-textInput-input-color-border-focus: var(--mn-color-primary-0800);
    --compSpec-textInput-input-color-border-active: var(--mn-color-primary-0800);
    --compSpec-textInput-input-color-border-filled: var(--mn-color-neutral-0900);
    --compSpec-textInput-input-color-border-disabled: var(--mn-color-neutral-0400);
    --compSpec-textInput-input-color-border-resting-error: var(--mn-color-red-0600);
    --compSpec-textInput-input-color-border-hover-error: var(--mn-color-red-0600);
    --compSpec-textInput-input-color-border-focus-error: var(--mn-color-red-0600);
    --compSpec-textInput-input-color-border-active-error: var(--mn-color-red-0600);
    --compSpec-textInput-input-color-border-filled-error: var(--mn-color-red-0600);
    --compSpec-textInput-input-color-outline: var(--mn-color-transparent);
    --compSpec-textInput-input-color-outline-error: var(--mn-color-red-0600);
    --compSpec-textInput-input-color-caret: var(--mn-color-primary-0700);
    --compSpec-textInput-input-size-border: var(--mn-baseSize-0013);
    --compSpec-textInput-input-size-border-error: var(--mn-baseSize-0025);
    --compSpec-textInput-input-size-outline: var(--mn-baseSize-0000);
    --compSpec-textInput-input-size-outline-error: var(--mn-baseSize-0013);
    --compSpec-textInput-input-spacing-vertical: var(--mn-baseSize-0150);
    --compSpec-textInput-input-spacing-horizontal: var(--mn-baseSize-0200);
    --compSpec-textInput-input-radius: var(--mn-baseSize-0200);
}

.figma-dark body,
body.dark-mode {
    --compSpec-textInput-label-color-text: var(--mn-color-neutral-0100);
    --compSpec-textInput-label-color-text-error: var(--mn-color-red-0300);
    --compSpec-textInput-label-optional-color-text: var(--mn-color-neutral-0300);
    --compSpec-textInput-description-color-text: var(--mn-color-neutral-0300);

    --compSpec-textInput-errorMessage-color-text: var(--mn-color-red-0300);

    --compSpec-textInput-input-color-bg-resting: var(--mn-color-neutral-0900);
    --compSpec-textInput-input-color-bg-hover: var(--mn-color-primary-0900);
    --compSpec-textInput-input-color-bg-focus: var(--mn-color-neutral-0900);
    --compSpec-textInput-input-color-bg-active: var(--mn-color-neutral-0900);
    --compSpec-textInput-input-color-bg-filled: var(--mn-color-neutral-0900);
    --compSpec-textInput-input-color-bg-disabled: var(--mn-color-neutral-0800);
    --compSpec-textInput-input-color-bg-resting-error: var(--mn-color-neutral-0900);
    --compSpec-textInput-input-color-bg-hover-error: var(--mn-color-red-0900);
    --compSpec-textInput-input-color-bg-focus-error: var(--mn-color-neutral-0900);
    --compSpec-textInput-input-color-bg-active-error: var(--mn-color-neutral-0900);
    --compSpec-textInput-input-color-bg-filled-error: var(--mn-color-neutral-0900);
    --compSpec-textInput-input-color-text-placeholder: var(--mn-color-neutral-0300);
    --compSpec-textInput-input-color-text-placeholder-disabled: var(--mn-color-neutral-0500);
    --compSpec-textInput-input-color-text: var(--mn-color-neutral-0100);
    --compSpec-textInput-input-color-text-disabled: var(--mn-color-neutral-0500);
    --compSpec-textInput-input-color-border-resting: var(--mn-color-neutral-0200);
    --compSpec-textInput-input-color-border-hover: var(--mn-color-primary-0200);
    --compSpec-textInput-input-color-border-focus: var(--mn-color-primary-0200);
    --compSpec-textInput-input-color-border-active: var(--mn-color-primary-0200);
    --compSpec-textInput-input-color-border-filled: var(--mn-color-neutral-0100);
    --compSpec-textInput-input-color-border-disabled: var(--mn-color-neutral-0600);
    --compSpec-textInput-input-color-border-resting-error: var(--mn-color-red-0300);
    --compSpec-textInput-input-color-border-hover-error: var(--mn-color-red-0300);
    --compSpec-textInput-input-color-border-focus-error: var(--mn-color-red-0300);
    --compSpec-textInput-input-color-border-active-error: var(--mn-color-red-0300);
    --compSpec-textInput-input-color-border-filled-error: var(--mn-color-red-0300);

    --compSpec-textInput-input-color-outline-error: var(--mn-color-red-0300);
    --compSpec-textInput-input-color-caret: var(--mn-color-primary-0300);
}

.input-text-container{
    display: flex;
    flex-flow: column nowrap;

    .input-text-label-container{
        display: flex;
        flex-flow: column nowrap;
        gap: var(--compSpec-textInput-label-container-spacing-gap-vertical);
        margin-bottom: var(--compSpec-textInput-label-container-spacing-margin-vertical-bottom);
    }

    & .input-text-label {
        @include body-medium-highImp;
        color: var(--compSpec-textInput-label-color-text);

        & > span {
            @include body-small;
            color: var(--compSpec-textInput-label-optional-color-text);
            padding-left: var(--compSpec-textInput-labelOptional-spacing-gap-horizontal);
        }
    
        &.error {
            color: var(--compSpec-textInput-label-color-text-error);
        }
    }

    & .input-text-description {
        @include body-small;
        color: var(--compSpec-textInput-description-color-text);
    }

    & .input-text-errormessage{
        @include body-small;
        margin-top: var(--compSpec-textInput-errorMessage-spacing-margin-vertical-top);
        margin-bottom: unset;
        color: var(--compSpec-textInput-errorMessage-color-text);
        transition: var(--semantic-transition-standard);
        opacity: 0;
        display: none;
    
        &.error{
            display: block;
            opacity: 1;
        }
    }

    & input[type=text] {
        @include body-medium;
        border: var(--compSpec-textInput-input-size-border) var(--compSpec-textInput-input-color-border-resting) solid;
        border-radius: var(--compSpec-textInput-input-radius);
        padding: var(--compSpec-textInput-input-spacing-vertical) var(--compSpec-textInput-input-spacing-horizontal);
        outline: var(--compSpec-textInput-input-size-outline);
        color: var(--compSpec-textInput-input-color-text);
        background-color: var(--compSpec-textInput-input-color-bg-resting);
        transition: var(--semantic-transition-standard);
        caret-color: var(--compSpec-textInput-input-color-caret);
    
        &::placeholder, &:-ms-input-placeholder, &::-ms-input-placeholder {
            color: var(--compSpec-textInput-input-color-text-placeholder);
            opacity: 1; 
        }
    
        //this is the filled state
        &:not(:placeholder-shown) {
            background-color: var(--compSpec-textInput-input-color-bg-filled);
            border-color: var(--compSpec-textInput-input-color-border-filled);
        } 
        
        &:active, &:focus {
            background-color: var(--compSpec-textInput-input-color-bg-focus) !important;
            border-color: var(--compSpec-textInput-input-color-border-focus) !important;
            
            &.error{
                background-color: var(--compSpec-textInput-input-color-bg-focus-error) !important;
                border-color: var(--compSpec-textInput-input-color-border-focus-error) !important;
                outline-color: var(--compSpec-textInput-input-color-outline-error) !important;
            }
        }
    
        &:hover{
            background-color: var(--compSpec-textInput-input-color-bg-hover);
            border-color: var(--compSpec-textInput-input-color-border-hover);
    
            &.error{
                background-color: var(--compSpec-textInput-input-color-bg-hover-error);
                border-color: var(--compSpec-textInput-input-color-border-hover-error);
            }
        }
    
        &.error {
            outline: var(--compSpec-textInput-input-size-outline-error) var(--compSpec-textInput-input-color-outline-error) solid;
            border-color: var(--compSpec-textInput-input-size-border-error);
        }
    }
}

